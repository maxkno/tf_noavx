Bootstrap: localimage
From: ./basic.simg

%environment
    # use bash as default shell
    SHELL=/bin/bash
    export SHELL

%labels
    Maintainer Max Knobbe
    Version 0.1

%post
    # installing and linking gcc version 4.8 
    GCC_VERSION="4.8"
    apt-get install -y software-properties-common
    add-apt-repository ppa:ubuntu-toolchain-r/test
    apt-get update
    apt-get install -y gcc-4.8
    apt-get install -y g++-4.8
    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$GCC_VERSION 10
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-$GCC_VERSION 10
    update-alternatives --set gcc "/usr/bin/gcc-$GCC_VERSION"
    update-alternatives --set g++ "/usr/bin/g++-$GCC_VERSION"
    
    # download and configure tf version
    git clone https://github.com/tensorflow/tensorflow.git
        mv tensorflow tensorflow_src && cd tensorflow_src
        git checkout r1.14

    # configure tf build
    export LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:/usr/local/cuda/lib64/stubs:/usr/include/x64_64-linux-gnu:$LD_LIBRARY_PATH
    export TF_NEED_CUDA=1
    export TF_NEED_TENSORRT=0
    export TF_CUDA_VERSION=10.1
    export TF_CUDNN_VERSION=7
    export PYTHONPATH=/usr/local/lib/python3.6/dist-packages
    export PYTHON_BIN_PATH=/usr/bin/python3.6
    rm /usr/bin/python
    ln -s /usr/bin/python3.6 /usr/bin/python
    ldconfig
    ./configure


    # run command bazel test -c opt --strip=never --config=cuda_clang -s //tensorflow/core/kernels:cwise_ops_test
    # build the python package
    bazel build \
        --config=opt \
        --config=cuda \
        --linkopt="-lrt" \
        --linkopt="-lm" \
        --host_linkopt="-lrt" \
        --host_linkopt="-lm" \
	--action_env PYTHON_BIN_PATH=/usr/bin/python \
	--action_env PATH \
	--action_env LD_LIBRARY_PATH \
	--action_env PYTHONPATH \
	//tensorflow/tools/pip_package:build_pip_package

%runscript
    /bin/bash

%test
    # tests
